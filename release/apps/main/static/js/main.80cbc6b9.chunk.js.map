{"version":3,"sources":["components/Bar.tsx","service.ts","pages/Login.tsx","pages/Main.tsx","pages/TopicDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Layout","Bar","props","className","title","style","position","axios","interceptors","response","use","resp","err","status","window","location","href","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","name","setName","passwd","setPassWd","height","background","display","justifyContent","alignItems","width","maxWidth","Item","label","rules","required","message","placeholder","prefix","UserOutlined","value","onChange","e","target","Password","KeyOutlined","type","htmlType","onClick","user","post","account","pass","login","then","data","success","error","msg","catch","MainPage","state","topics","isBusy","get","params","pageIndex","pageSize","setState","columns","render","obj","record","idx","dataIndex","key","text","passed","color","timeCost","recoder","IsPassed","TimeCost","rank","id","size","dataSource","this","loading","renderList","React","PureComponent","TopicInfo","isTestBegin","showDetail","topicDetail","frameRef","createRef","testId","match","undefined","URL","split","Name","Id","Modal","confirm","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","current","contentWindow","getExamResult","postData","console","log","appName","res","isPassed","fontWeight","timeout","result","ex","JSON","stringify","src","ref","left","right","top","bottom","visibility","Title","margin","padding","dangerouslySetInnerHTML","__html","IntroductionHTMLStr","float","danger","onSubmitBtn","bind","marginLeft","marginRight","onSwitchViewBtn","onBeginTestBtn","tip","renderTestPage","renderDetailPage","renderFooder","history","createBrowserHistory","App","path","exact","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80cbc6b9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Layout } from 'antd';\r\nconst { Header} = Layout;\r\nexport default function Bar(props:{title:string}) {\r\n  return (\r\n    <Header className=\"header\" title=\"RPA Challenge\">\r\n      <div style={{position: \"absolute\"}}>\r\n        <strong>RPA Challenge</strong>\r\n      </div>\r\n      <div className=\"mid-title\">{props?.title}</div>\r\n      <div className=\"user-info\">{}</div>\r\n    </Header>\r\n  );\r\n}\r\n","import { default as axios } from 'axios';\r\ninterface ICommonResp<T> {\r\n  status: Number;\r\n  success: Boolean;\r\n  msg: String;\r\n  response: T;\r\n}\r\naxios.interceptors.response.use(resp=>resp, err =>{\r\n  if(err.response.status == 401) {\r\n    window.location.href = \"/main/login\"\r\n  }\r\n  return err;\r\n})\r\nexport function login(user: string, passwd: string) {\r\n  return axios.post<ICommonResp<string>>('/api/userlogin/login', {\r\n    account: user,\r\n    pass: passwd\r\n  })\r\n}\r\nexport function logout() {\r\n  return axios.post<ICommonResp<string>>('/api/userlogin/loginout');\r\n}\r\n/** 提交考试结果 */\r\nexport function submit(postData: { appName: string; data: any ,testId: string}) {\r\n  return axios.post<{ isPassed: boolean; result?: string,timeout: string }>('/submit', postData);\r\n}\r\nexport function getUserExamList() {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Page: number;\r\n      PageCount: number;\r\n      DataCount: number;\r\n      PageSize: number;\r\n      data: Array<{\r\n        Id: number;\r\n        Title: string;\r\n        IntroductionHTMLStr: string;\r\n        URL: string;\r\n        TimeCost: number;\r\n        IsPassed: boolean;\r\n        Rank: number;\r\n      }>;\r\n    }>\r\n  >('/api/rpaexaminfo/getuserrpaexamlist', {\r\n    params: {\r\n      pageIndex: 1,\r\n      pageSize: 1000\r\n    }\r\n  });\r\n}\r\nexport function getDetail(testId:string) {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Id: number;\r\n      Title: string;\r\n      IntroductionHTMLStr: string;\r\n      URL: string;\r\n      TimeCost: number;\r\n      IsPassed: boolean;\r\n      Rank: number;\r\n    }>\r\n  >('/api/rpaexaminfo/getrpaexamdetailinfo', {\r\n    params: {\r\n      testId: testId}\r\n  });\r\n}\r\nexport function challengeStart(id: string) {\r\n  return axios.post<ICommonResp<boolean>>(`/api/rpachallenge/challengestart?testId=${id}`, {\r\n    testId: id\r\n  });\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Form, Input, message } from 'antd';\r\nimport { UserOutlined, KeyOutlined } from '@ant-design/icons';\r\nimport Bar from '../components/Bar';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { login } from '../service';\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 16 }\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 0, span: 24 }\r\n};\r\n\r\nexport default function Login() {\r\n  let [name, setName] = useState('');\r\n  let [passwd, setPassWd] = useState('');\r\n  return (\r\n    <Layout style={{ height: '90%', background: 'rgb(255,255,255)' }}>\r\n      <Bar title=\"\" />\r\n      <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Form {...layout} style={{ width: '50%', maxWidth: 500 }}>\r\n          <Form.Item label=\"Username\" name=\"username\" rules={[{ required: true, message: 'Please input your username!' }]}>\r\n            <Input placeholder=\"Username\" prefix={<UserOutlined />} value={name} onChange={(e) => setName(e.target.value)} />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"Password\" name=\"Password\" rules={[{ required: true, message: 'Please input your password!' }]}>\r\n            <Input.Password placeholder=\"Password\" value={passwd} onChange={(e) => setPassWd(e.target.value)} prefix={<KeyOutlined />} />\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={() => {\r\n                  login(name, passwd)\r\n                    .then((resp) => {\r\n                      resp.data.success ? (window.location.href = '/main/index.html') : message.error(resp.data.msg);\r\n                    })\r\n                    .catch((err) => message.error(err.message));\r\n                }}\r\n              >\r\n                登录\r\n              </Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n","import Layout, { Content } from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Button, message, Space, Table, Tag } from 'antd';\r\nimport { getUserExamList } from '../service';\r\n\r\ninterface ITopicModle {\r\n  /** 测试id */\r\n  Id: string;\r\n  /** 测试题目 */\r\n  Title: string;\r\n  /** 测试所在url */\r\n  URL: string;\r\n  /** 是否已通过测试 */\r\n  IsPassed: boolean;\r\n  /** 最佳用时 */\r\n  TimeCost?: number;\r\n  /** 耗时排名 */\r\n  Rank?: number;\r\n}\r\nexport class MainPage extends React.PureComponent {\r\n  state: {\r\n    topics: Array<ITopicModle>;\r\n    isBusy:boolean\r\n  } = {\r\n    topics: [],\r\n    isBusy: true\r\n  };\r\n  componentDidMount(){\r\n    getUserExamList().then(resp=>this.setState({\r\n      topics: resp.data?.response?.data??[],\r\n      isBusy: false\r\n    })).catch((err:any)=>{\r\n      message.error(`获取列表失败，请稍后刷新重试! (${err.message})`);\r\n    })\r\n  }\r\n  renderList() {\r\n    const columns = [\r\n      {\r\n        title: ' ',\r\n        width: '4%',\r\n        render: (obj: ITopicModle, record: ITopicModle, idx: number) => <span>{idx + 1}</span>\r\n      },\r\n      {\r\n        title: '题目名称',\r\n        dataIndex: 'Title',\r\n        key: 'Title',\r\n        render: (text: string) => <span>{text}</span>\r\n      },\r\n      {\r\n        title: '是否已通过',\r\n        dataIndex: 'IsPassed',\r\n        key: 'IsPassed',\r\n        render: (passed: boolean) => (passed ? <Tag color=\"green\">已通过</Tag> : <Tag color=\"red\">未通过</Tag>)\r\n      },\r\n      {\r\n        title: '耗时',\r\n        dataIndex: 'TimeCost',\r\n        key: 'TimeCost',\r\n        render: (timeCost: number, recoder: ITopicModle) => (recoder.IsPassed  ? <span>{(recoder.TimeCost??0) / 1000}s</span> : '--')\r\n      },\r\n      {\r\n        title: '排名',\r\n        dataIndex: 'Rank',\r\n        key: 'Rank',\r\n        render: (rank: number, recoder: ITopicModle) => (recoder.IsPassed ? <span>{rank}</span> : '--')\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'Id',\r\n        key: 'Id',\r\n        render: (id: string) => (\r\n          <Space size=\"middle\">\r\n            <Button type=\"ghost\">\r\n              <a href={`/main/topicdetail/${id}`}>进入测试</a>\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n    ];\r\n    return <Table style={{ width: '80%' }} columns={columns} dataSource={this.state.topics} loading={this.state.isBusy}/>;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title=\"题目列表\" />\r\n        <Content style={{ display: 'flex', justifyContent: 'center' }}>{this.renderList()}</Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import { Button, Divider, Layout, PageHeader, Modal, message } from 'antd';\r\nimport React, { PureComponent } from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Content, Footer } from 'antd/lib/layout/layout';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { challengeStart, getDetail, submit } from '../service';\r\nimport { Spin } from 'antd';\r\n\r\ninterface IProps {\r\n  match: {\r\n    params: { id: string };\r\n  };\r\n}\r\ninterface IState {\r\n  isTestBegin: boolean;\r\n  showDetail: boolean;\r\n  topicDetail: ITopicDetail;\r\n  isBusy: boolean;\r\n}\r\ninterface ITopicDetail {\r\n  /** 测试ID */\r\n  Id?: string;\r\n  /** 测试名称 */\r\n  Title?: string;\r\n  /** 测试说明 */\r\n  IntroductionHTMLStr?: string;\r\n  /** 测试页面URL */\r\n  URL?: string;\r\n  Name?: string;\r\n}\r\nexport class TopicInfo extends PureComponent<Partial<IProps>> {\r\n  state: IState = {\r\n    isTestBegin: false,\r\n    showDetail: true,\r\n    topicDetail: {},\r\n    isBusy: true\r\n  };\r\n\r\n  frameRef = React.createRef<HTMLIFrameElement>();\r\n  componentDidMount() {\r\n    const id = this.props?.match?.params?.id;\r\n    if (id === '' || id === undefined) {\r\n      message.error('无法读取当前考试信息ID，请退出后重试!');\r\n      return;\r\n    }\r\n    this.setState({ id });\r\n    getDetail(id)\r\n      .then((resp) => {\r\n        let topicDetail = resp.data.response;\r\n        let name = topicDetail.URL.split('/')[1];\r\n        this.setState({\r\n          topicDetail: {\r\n            ...topicDetail,\r\n            Name: name\r\n          },\r\n          isBusy: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`读取当前测试信息错误，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onBeginTestBtn() {\r\n    challengeStart(this.state.topicDetail.Id ?? '')\r\n      .then(() => {\r\n        this.setState({\r\n          isTestBegin: true,\r\n          showDetail: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`无法启动测试，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onSwitchViewBtn() {\r\n    this.setState({\r\n      showDetail: !this.state.showDetail\r\n    });\r\n  }\r\n  onSubmitBtn() {\r\n    Modal.confirm({\r\n      title: '请确认',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '确认提交本次测试结果?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        try {\r\n          let frameWin: any = this.frameRef.current?.contentWindow;\r\n          frameWin\r\n            .getExamResult()\r\n            .then((data: any) => {\r\n              console && console.log(data);\r\n              submit({\r\n                data: data,\r\n                appName: this.state.topicDetail.Name || '',\r\n                testId: this.state.topicDetail.Id ?? ''\r\n              })\r\n                .then((res) => {\r\n                  res.data.isPassed\r\n                    ? Modal.success({\r\n                        title: '通过测试',\r\n                        content: (\r\n                          <div>\r\n                            <div>\r\n                              用时：<span style={{ fontWeight: 'bold' }}>{res.data.timeout ?? '--'}</span> ms\r\n                            </div>\r\n                          </div>\r\n                        ),\r\n                        onOk() {\r\n                          (window.location as any).href = '/main/index.html';\r\n                        }\r\n                      })\r\n                    : message.error(res.data.result ?? '未通过校验，请检查修改后重新提交！');\r\n                })\r\n                .catch((err) => {\r\n                  console && console.error(err);\r\n                  message.error(err.message);\r\n                });\r\n            })\r\n            .catch((err: string) => {\r\n              console && console.error(err);\r\n              message.error(err);\r\n            });\r\n        } catch (ex) {\r\n          console && console.error(JSON.stringify(ex.message));\r\n          message.error(JSON.stringify(ex.message));\r\n        }\r\n      }\r\n    });\r\n  }\r\n  renderTestPage() {\r\n    return (\r\n      <>\r\n        <Content style={{ position: 'relative' }}>\r\n          <iframe src={this.state.topicDetail.URL} height=\"100%\" width=\"100%\" ref={this.frameRef}></iframe>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              right: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n              visibility: !this.state.showDetail ? 'hidden' : 'initial',\r\n              background: '#fff'\r\n            }}\r\n          >\r\n            <PageHeader title={this.state.topicDetail?.Title + (this.state.topicDetail.Id ?? '')} />\r\n            <Divider style={{ margin: '0 0 10px 0' }} />\r\n            <div\r\n              style={{ padding: '0 10px 20px 10px' }}\r\n              dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n            ></div>\r\n          </div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderDetailPage() {\r\n    return (\r\n      <>\r\n        <Content>\r\n          <PageHeader title={this.state.topicDetail?.Title} />\r\n          <Divider style={{ margin: '0 0 10px 0' }} />\r\n          <div\r\n            style={{ padding: '0 10px 20px 10px' }}\r\n            dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n          ></div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderFooder() {\r\n    return this.state.isTestBegin ? (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" danger onClick={this.onSubmitBtn.bind(this)}>\r\n          提交\r\n        </Button>\r\n        <Button style={{ float: 'right', marginLeft: 10, marginRight: 10 }} type=\"ghost\" onClick={this.onSwitchViewBtn.bind(this)}>\r\n          切换视图\r\n        </Button>\r\n      </Footer>\r\n    ) : (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" onClick={this.onBeginTestBtn.bind(this)}>\r\n          开始测试\r\n        </Button>\r\n      </Footer>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', width: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title={this.state.isTestBegin && !this.state.showDetail ? this.state.topicDetail.Title ?? '' : '详情'} />\r\n        {this.state.isBusy && <Spin tip=\"加载中...\" />}\r\n        {this.state.isTestBegin ? this.renderTestPage() : this.renderDetailPage()}\r\n        {this.renderFooder()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\nimport { Layout } from 'antd';\nimport './App.less';\nimport { Router, Route } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport Login from './pages/Login';\nimport { MainPage } from './pages/Main';\nimport { TopicInfo } from './pages/TopicDetail';\nconst history = createBrowserHistory();\nclass App extends React.Component<{}, { title: string }> {\n  setTitle(title: string) {\n    this.setState({\n      title: title\n    });\n  }\n  render() {\n    return (\n      <Router history={history}>\n         <Route path=\"/main\" exact component={MainPage} />\n        <Route path=\"/main/index.html\" exact component={MainPage} />\n        <Route path=\"/main/login\" component={Login} />\n        <Route path=\"/main/topicdetail/:id\" component={TopicInfo} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}