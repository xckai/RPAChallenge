{"version":3,"sources":["service.ts","components/Bar.tsx","pages/Login.tsx","pages/Main.tsx","pages/TopicDetail.tsx","pages/LoginSuccess.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hostPrefix","window","location","protocol","host","config","authority","client_id","redirect_uri","response_type","scope","post_logout_redirect_uri","oidcManager","Oidc","UserManager","login","signinRedirect","logout","signoutRedirect","axios","interceptors","response","use","resp","err","status","href","Header","Layout","Bar","state","userName","isLogin","getUser","then","user","setState","profile","name","className","title","this","props","overlay","Item","target","rel","onClick","placement","style","color","type","PureComponent","Login","height","background","display","justifyContent","alignItems","backgroundColor","width","position","flexDirection","size","icon","LoginOutlined","catch","message","error","MainPage","topics","isBusy","get","params","pageIndex","pageSize","data","columns","render","obj","record","idx","dataIndex","key","text","passed","timeCost","recoder","IsPassed","TimeCost","rank","id","dataSource","loading","renderList","React","TopicInfo","isTestBegin","showDetail","topicDetail","frameRef","createRef","testId","match","undefined","URL","split","Name","Id","post","Modal","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","current","contentWindow","getExamResult","postData","console","log","appName","res","isPassed","success","fontWeight","timeout","result","ex","JSON","stringify","src","ref","left","right","top","bottom","visibility","Title","margin","padding","dangerouslySetInnerHTML","__html","IntroductionHTMLStr","float","danger","onSubmitBtn","bind","marginLeft","marginRight","onSwitchViewBtn","onBeginTestBtn","tip","renderTestPage","renderDetailPage","renderFooder","LoginSuccess","useEffect","signinRedirectCallback","history","createBrowserHistory","App","path","exact","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","pathname","indexOf"],"mappings":"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","file":"static/js/main.48c3c01a.chunk.js","sourcesContent":["import { default as axios } from 'axios';\r\nimport Oidc from 'oidc-client';\r\n\r\ninterface ICommonResp<T> {\r\n  status: Number;\r\n  success: Boolean;\r\n  msg: String;\r\n  response: T;\r\n}\r\nconst hostPrefix = `${window.location.protocol}//${window.location.host}`;\r\nconst config = {\r\n  authority: 'https://auth.bottime.com',\r\n  client_id: 'encoo_RPAChallenge',\r\n  redirect_uri: `${hostPrefix}/main/login_success`,\r\n  response_type: 'code',\r\n  scope: 'openid profile offline_access rpa_challenge',\r\n  post_logout_redirect_uri: `${hostPrefix}/main/login`\r\n};\r\nconst oidcManager = new Oidc.UserManager(config);\r\n(window as any).oidcManager = oidcManager;\r\naxios.interceptors.response.use(\r\n  (resp) => resp,\r\n  (err) => {\r\n    if (err.response.status == 401) {\r\n      window.location.href = '/main/login';\r\n    }\r\n    return err;\r\n  }\r\n);\r\nexport function doAuthCheck() {\r\n  oidcManager.getUser().then((user) => {\r\n    if (!user) {\r\n      if (window.location.pathname.indexOf('/main/login') != -1 && window.location.pathname.indexOf('/main/login_success') != -1){\r\n        window.location.href = '/main/login';\r\n      }\r\n    }\r\n  });\r\n}\r\nexport function getUserInfo() {\r\n  return oidcManager.getUser();\r\n}\r\nexport function login() {\r\n  return oidcManager.signinRedirect();\r\n}\r\nexport function loginCb() {\r\n  return oidcManager.signinRedirectCallback();\r\n}\r\nexport function logout() {\r\n  return oidcManager.signoutRedirect();\r\n}\r\n/** 提交考试结果 */\r\nexport function submit(postData: { appName: string; data: any; testId: string }) {\r\n  return axios.post<{ isPassed: boolean; result?: string; timeout: string }>('/submit', postData);\r\n}\r\nexport function getUserExamList() {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Page: number;\r\n      PageCount: number;\r\n      DataCount: number;\r\n      PageSize: number;\r\n      data: Array<{\r\n        Id: number;\r\n        Title: string;\r\n        IntroductionHTMLStr: string;\r\n        URL: string;\r\n        TimeCost: number;\r\n        IsPassed: boolean;\r\n        Rank: number;\r\n      }>;\r\n    }>\r\n  >('/api/rpaexaminfo/getuserrpaexamlist', {\r\n    params: {\r\n      pageIndex: 1,\r\n      pageSize: 1000\r\n    }\r\n  });\r\n}\r\nexport function getDetail(testId: string) {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Id: number;\r\n      Title: string;\r\n      IntroductionHTMLStr: string;\r\n      URL: string;\r\n      TimeCost: number;\r\n      IsPassed: boolean;\r\n      Rank: number;\r\n    }>\r\n  >('/api/rpaexaminfo/getrpaexamdetailinfo', {\r\n    params: {\r\n      testId: testId\r\n    }\r\n  });\r\n}\r\nexport function challengeStart(id: string) {\r\n  return axios.post<ICommonResp<boolean>>(`/api/rpachallenge/challengestart?testId=${id}`, {\r\n    testId: id\r\n  });\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { Layout, Menu, Dropdown, Button, Space, message } from 'antd';\r\nimport { getUserInfo, login, logout } from '../service';\r\nconst { Header } = Layout;\r\nexport default class Bar extends PureComponent<{ title: string }> {\r\n  state = {\r\n    userName: '未登录',\r\n    isLogin: false\r\n  };\r\n  componentDidMount() {\r\n    getUserInfo().then((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          isLogin: true,\r\n          userName: user?.profile.name ?? '--'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isLogin: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Header className=\"header\" title=\"RPA Challenge\">\r\n        <div>\r\n          <strong>RPA Challenge</strong>\r\n        </div>\r\n        <div className=\"mid-title\">{this.props?.title}</div>\r\n        <div className=\"user-info\">\r\n          {this.state.isLogin ? (\r\n            <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    {\r\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={logout}>\r\n                        注销\r\n                      </a>\r\n                    }\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <a style={{ color: '#eee' }}>{this.state.userName}</a>\r\n            </Dropdown>\r\n          ) : (\r\n            <Button type=\"ghost\" onClick={login}>\r\n              点击登录\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Button, message } from 'antd';\r\nimport Bar from '../components/Bar';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { login } from '../service';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nexport default function Login() {\r\n  return (\r\n    <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n      <Bar title=\"\" />\r\n      <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center',backgroundColor:\"#000\" }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', width: '100%', position: 'relative' }} className=\"bg\">\r\n          <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <div className=\"logo-login\" style={{ width: '300px', height: '100px' }}></div>\r\n            <Button\r\n              type=\"ghost\"\r\n              size=\"large\"\r\n              icon={<LoginOutlined />}\r\n              onClick={() => {\r\n                login().catch((err) => message.error(err.message));\r\n              }}\r\n            >\r\n              点击登录\r\n            </Button>\r\n          </section>\r\n        </div>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n","import Layout, { Content } from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Button, message, Space, Table, Tag } from 'antd';\r\nimport { getUserExamList } from '../service';\r\n\r\ninterface ITopicModle {\r\n  /** 测试id */\r\n  Id: string;\r\n  /** 测试题目 */\r\n  Title: string;\r\n  /** 测试所在url */\r\n  URL: string;\r\n  /** 是否已通过测试 */\r\n  IsPassed: boolean;\r\n  /** 最佳用时 */\r\n  TimeCost?: number;\r\n  /** 耗时排名 */\r\n  Rank?: number;\r\n}\r\nexport class MainPage extends React.PureComponent {\r\n  state: {\r\n    topics: Array<ITopicModle>;\r\n    isBusy:boolean\r\n  } = {\r\n    topics: [],\r\n    isBusy: true\r\n  };\r\n  componentDidMount(){\r\n    getUserExamList().then(resp=>this.setState({\r\n      topics: resp.data?.response?.data??[],\r\n      isBusy: false\r\n    })).catch((err:any)=>{\r\n      message.error(`获取列表失败，请稍后刷新重试! (${err.message})`);\r\n    })\r\n  }\r\n  renderList() {\r\n    const columns = [\r\n      {\r\n        title: ' ',\r\n        width: '4%',\r\n        render: (obj: ITopicModle, record: ITopicModle, idx: number) => <span>{idx + 1}</span>\r\n      },\r\n      {\r\n        title: '题目名称',\r\n        dataIndex: 'Title',\r\n        key: 'Title',\r\n        render: (text: string) => <span>{text}</span>\r\n      },\r\n      {\r\n        title: '是否已通过',\r\n        dataIndex: 'IsPassed',\r\n        key: 'IsPassed',\r\n        render: (passed: boolean) => (passed ? <Tag color=\"green\">已通过</Tag> : <Tag color=\"red\">未通过</Tag>)\r\n      },\r\n      {\r\n        title: '耗时',\r\n        dataIndex: 'TimeCost',\r\n        key: 'TimeCost',\r\n        render: (timeCost: number, recoder: ITopicModle) => (recoder.IsPassed  ? <span>{(recoder.TimeCost??0) / 1000}s</span> : '--')\r\n      },\r\n      {\r\n        title: '排名',\r\n        dataIndex: 'Rank',\r\n        key: 'Rank',\r\n        render: (rank: number, recoder: ITopicModle) => (recoder.IsPassed ? <span>{rank}</span> : '--')\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'Id',\r\n        key: 'Id',\r\n        render: (id: string) => (\r\n          <Space size=\"middle\">\r\n            <Button type=\"ghost\" onClick={()=>{\r\n              window.location.href=`/main/topicdetail/${id}`;\r\n            }}>\r\n              <span >进入测试</span>\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n    ];\r\n    return <Table style={{ width: '80%' }} columns={columns} dataSource={this.state.topics} loading={this.state.isBusy}/>;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title=\"题目列表\" />\r\n        <Content style={{ display: 'flex', justifyContent: 'center' }}>{this.renderList()}</Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import { Button, Divider, Layout, PageHeader, Modal, message } from 'antd';\r\nimport React, { PureComponent } from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Content, Footer } from 'antd/lib/layout/layout';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { challengeStart, getDetail, submit } from '../service';\r\nimport { Spin } from 'antd';\r\n\r\ninterface IProps {\r\n  match: {\r\n    params: { id: string };\r\n  };\r\n}\r\ninterface IState {\r\n  isTestBegin: boolean;\r\n  showDetail: boolean;\r\n  topicDetail: ITopicDetail;\r\n  isBusy: boolean;\r\n}\r\ninterface ITopicDetail {\r\n  /** 测试ID */\r\n  Id?: string;\r\n  /** 测试名称 */\r\n  Title?: string;\r\n  /** 测试说明 */\r\n  IntroductionHTMLStr?: string;\r\n  /** 测试页面URL */\r\n  URL?: string;\r\n  Name?: string;\r\n}\r\nexport class TopicInfo extends PureComponent<Partial<IProps>> {\r\n  state: IState = {\r\n    isTestBegin: false,\r\n    showDetail: true,\r\n    topicDetail: {},\r\n    isBusy: true\r\n  };\r\n\r\n  frameRef = React.createRef<HTMLIFrameElement>();\r\n  componentDidMount() {\r\n    const id = this.props?.match?.params?.id;\r\n    if (id === '' || id === undefined) {\r\n      message.error('无法读取当前考试信息ID，请退出后重试!');\r\n      return;\r\n    }\r\n    this.setState({ id });\r\n    getDetail(id)\r\n      .then((resp) => {\r\n        let topicDetail = resp.data.response;\r\n        let name = topicDetail.URL.split('/')[1];\r\n        this.setState({\r\n          topicDetail: {\r\n            ...topicDetail,\r\n            Name: name\r\n          },\r\n          isBusy: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`读取当前测试信息错误，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onBeginTestBtn() {\r\n    challengeStart(this.state.topicDetail.Id ?? '')\r\n      .then(() => {\r\n        this.setState({\r\n          isTestBegin: true,\r\n          showDetail: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`无法启动测试，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onSwitchViewBtn() {\r\n    this.setState({\r\n      showDetail: !this.state.showDetail\r\n    });\r\n  }\r\n  onSubmitBtn() {\r\n    Modal.confirm({\r\n      title: '请确认',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '确认提交本次测试结果?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        try {\r\n          let frameWin: any = this.frameRef.current?.contentWindow;\r\n          frameWin\r\n            .getExamResult()\r\n            .then((data: any) => {\r\n              console && console.log(data);\r\n              submit({\r\n                data: data,\r\n                appName: this.state.topicDetail.Name || '',\r\n                testId: this.state.topicDetail.Id ?? ''\r\n              })\r\n                .then((res) => {\r\n                  res.data.isPassed\r\n                    ? Modal.success({\r\n                        title: '通过测试',\r\n                        content: (\r\n                          <div>\r\n                            <div>\r\n                              用时：<span style={{ fontWeight: 'bold' }}>{res.data.timeout ?? '--'}</span> ms\r\n                            </div>\r\n                          </div>\r\n                        ),\r\n                        onOk() {\r\n                          (window.location as any).href = '/main/index.html';\r\n                        }\r\n                      })\r\n                    : message.error(res.data.result ?? '未通过校验，请检查修改后重新提交！');\r\n                })\r\n                .catch((err) => {\r\n                  console && console.error(err);\r\n                  message.error(err.message);\r\n                });\r\n            })\r\n            .catch((err: string) => {\r\n              console && console.error(err);\r\n              message.error(err);\r\n            });\r\n        } catch (ex) {\r\n          console && console.error(JSON.stringify(ex.message));\r\n          message.error(JSON.stringify(ex.message));\r\n        }\r\n      }\r\n    });\r\n  }\r\n  renderTestPage() {\r\n    return (\r\n      <>\r\n        <Content style={{ position: 'relative' }}>\r\n          <iframe src={this.state.topicDetail.URL} height=\"100%\" width=\"100%\" ref={this.frameRef}></iframe>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              right: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n              visibility: !this.state.showDetail ? 'hidden' : 'initial',\r\n              background: '#fff'\r\n            }}\r\n          >\r\n            <PageHeader title={this.state.topicDetail?.Title + (this.state.topicDetail.Id ?? '')} />\r\n            <Divider style={{ margin: '0 0 10px 0' }} />\r\n            <div\r\n              style={{ padding: '0 10px 20px 10px' }}\r\n              dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n            ></div>\r\n          </div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderDetailPage() {\r\n    return (\r\n      <>\r\n        <Content>\r\n          <PageHeader title={this.state.topicDetail?.Title} />\r\n          <Divider style={{ margin: '0 0 10px 0' }} />\r\n          <div\r\n            style={{ padding: '0 10px 20px 10px' }}\r\n            dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n          ></div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderFooder() {\r\n    return this.state.isTestBegin ? (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" danger onClick={this.onSubmitBtn.bind(this)}>\r\n          提交\r\n        </Button>\r\n        <Button style={{ float: 'right', marginLeft: 10, marginRight: 10 }} type=\"ghost\" onClick={this.onSwitchViewBtn.bind(this)}>\r\n          切换视图\r\n        </Button>\r\n      </Footer>\r\n    ) : (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" onClick={this.onBeginTestBtn.bind(this)}>\r\n          开始测试\r\n        </Button>\r\n      </Footer>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', width: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title={this.state.isTestBegin && !this.state.showDetail ? this.state.topicDetail.Title ?? '' : '详情'} />\r\n        {this.state.isBusy && <Spin tip=\"加载中...\" />}\r\n        {this.state.isTestBegin ? this.renderTestPage() : this.renderDetailPage()}\r\n        {this.renderFooder()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { message, Spin } from 'antd';\r\nimport Bar from '../components/Bar';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { loginCb } from '../service';\r\n\r\nexport default function LoginSuccess() {\r\n  useEffect(() => {\r\n    loginCb()\r\n      .then((user) => {\r\n        window.location.href = '/main/index.html';\r\n      })\r\n      .catch((err) => message.error(err.message));\r\n  });\r\n  return (\r\n    <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n      <Spin tip=\"正在登录...\" style={{ height: '100vh'}}>\r\n        <Bar title=\"\" />\r\n        <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height:\"95vh\" }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%', position: 'relative' }} className=\"bg\">\r\n            <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n              <div className=\"logo-login\" style={{ width: '400px', height: '150px', marginRight: 10 }}></div>\r\n            </section>\r\n          </div>\r\n        </Content>\r\n      </Spin>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.less';\nimport { Router, Route } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport Login from './pages/Login';\nimport { MainPage } from './pages/Main';\nimport { TopicInfo } from './pages/TopicDetail';\nimport LoginSuccess from './pages/LoginSuccess';\nconst history = createBrowserHistory();\nclass App extends React.Component<{}, { title: string }> {\n  setTitle(title: string) {\n    this.setState({\n      title: title\n    });\n  }\n  render() {\n    return (\n      <Router history={history}>\n         <Route path=\"/main\" exact component={MainPage} />\n        <Route path=\"/main/index.html\" exact component={MainPage} />\n        <Route path=\"/main/login\" component={Login} />\n        <Route path=\"/main/login_success\"  component={LoginSuccess} />\n        <Route path=\"/main/topicdetail/:id\" component={TopicInfo} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { doAuthCheck } from './service';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\ndoAuthCheck()\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}