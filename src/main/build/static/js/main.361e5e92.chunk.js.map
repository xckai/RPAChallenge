{"version":3,"sources":["service.ts","components/Bar.tsx","pages/Login.tsx","pages/Main.tsx","pages/TopicDetail.tsx","pages/LoginSuccess.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["hostPrefix","window","location","protocol","host","config","authority","client_id","redirect_uri","response_type","scope","post_logout_redirect_uri","oidcManager","Oidc","UserManager","token","login","signinRedirect","clearLoginInfo","clearStaleState","removeUser","logout","signoutRedirect","then","axios","interceptors","response","use","resp","err","status","href","request","headers","common","Header","Layout","Bar","state","userName","isLogin","getUser","user","setState","profile","name","className","title","this","props","overlay","Item","target","rel","onClick","placement","style","color","type","PureComponent","Login","useEffect","height","background","display","justifyContent","alignItems","backgroundColor","width","position","flexDirection","size","icon","LoginOutlined","catch","message","error","MainPage","topics","isBusy","get","params","pageIndex","pageSize","data","columns","render","obj","record","idx","dataIndex","key","text","passed","timeCost","recoder","IsPassed","TimeCost","rank","id","dataSource","loading","renderList","React","TopicInfo","isTestBegin","showDetail","topicDetail","frameRef","createRef","testId","match","undefined","URL","split","Name","Id","post","Modal","confirm","ExclamationCircleOutlined","content","okText","cancelText","onOk","current","contentWindow","getExamResult","postData","console","log","appName","res","isPassed","success","fontWeight","timeout","result","ex","JSON","stringify","src","ref","left","right","top","bottom","visibility","Title","margin","padding","dangerouslySetInnerHTML","__html","IntroductionHTMLStr","float","danger","onSubmitBtn","bind","marginLeft","marginRight","onSwitchViewBtn","onBeginTestBtn","tip","renderTestPage","renderDetailPage","renderFooder","LoginSuccess","signinRedirectCallback","userInfo","cb","history","createBrowserHistory","App","path","exact","component","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","pathname","indexOf","access_token"],"mappings":"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","file":"static/js/main.361e5e92.chunk.js","sourcesContent":["import { default as axios } from 'axios';\r\nimport Oidc from 'oidc-client';\r\n\r\ninterface ICommonResp<T> {\r\n  status: Number;\r\n  success: Boolean;\r\n  msg: String;\r\n  response: T;\r\n}\r\nconst hostPrefix = `${window.location.protocol}//${window.location.host}`;\r\nconst config = {\r\n  authority: 'https://auth.bottime.com',\r\n  client_id: 'encoo_RPAChallenge',\r\n  redirect_uri: `${hostPrefix}/main/login_success`,\r\n  response_type: 'code',\r\n  scope: 'openid profile offline_access rpa_challenge',\r\n  post_logout_redirect_uri: `${hostPrefix}/main/login`\r\n};\r\nconst oidcManager = new Oidc.UserManager(config);\r\nlet token = '';\r\n(window as any).oidcManager = oidcManager;\r\naxios.interceptors.response.use(\r\n  (resp) => resp,\r\n  (err) => {\r\n    if (err.response.status == 401) {\r\n      window.location.href = '/main/login';\r\n    }\r\n    return err;\r\n  }\r\n);\r\naxios.interceptors.request.use((config) => {\r\n  config.headers.common['Authorization'] = token;\r\n  return config;\r\n});\r\nexport function doAuthCheck(cb: any) {\r\n  if (window.location.pathname.indexOf('/main/login') >=0 || window.location.pathname.indexOf('/main/login_success') >= 0) {\r\n    cb && cb();\r\n    return;\r\n  } else {\r\n    oidcManager.getUser().then((user) => {\r\n      if (!user) {\r\n        window.location.href = '/main/login';\r\n      } else {\r\n        token = `Bearer ${user.access_token}`;\r\n      }\r\n      cb && cb();\r\n    });\r\n  }\r\n}\r\nexport function getUserInfo() {\r\n  return oidcManager.getUser();\r\n}\r\nexport function login() {\r\n  return oidcManager.signinRedirect();\r\n}\r\nexport function loginCb() {\r\n  return oidcManager.signinRedirectCallback().then((userInfo) => {\r\n    return userInfo;\r\n  });\r\n}\r\nexport function clearLoginInfo() {\r\n  oidcManager.clearStaleState();\r\n  oidcManager.removeUser();\r\n  return true;\r\n}\r\nexport function logout() {\r\n  return oidcManager.signoutRedirect().then(clearLoginInfo)\r\n}\r\n/** 提交考试结果 */\r\nexport function submit(postData: { appName: string; data: any; testId: string }) {\r\n  return axios.post<{ isPassed: boolean; result?: string; timeout: string }>('/submit', postData);\r\n}\r\nexport function getUserExamList() {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Page: number;\r\n      PageCount: number;\r\n      DataCount: number;\r\n      PageSize: number;\r\n      data: Array<{\r\n        Id: number;\r\n        Title: string;\r\n        IntroductionHTMLStr: string;\r\n        URL: string;\r\n        TimeCost: number;\r\n        IsPassed: boolean;\r\n        Rank: number;\r\n      }>;\r\n    }>\r\n  >('/api/rpaexaminfo/getuserrpaexamlist', {\r\n    params: {\r\n      pageIndex: 1,\r\n      pageSize: 1000\r\n    }\r\n  });\r\n}\r\nexport function getDetail(testId: string) {\r\n  return axios.get<\r\n    ICommonResp<{\r\n      Id: number;\r\n      Title: string;\r\n      IntroductionHTMLStr: string;\r\n      URL: string;\r\n      TimeCost: number;\r\n      IsPassed: boolean;\r\n      Rank: number;\r\n    }>\r\n  >('/api/rpaexaminfo/getrpaexamdetailinfo', {\r\n    params: {\r\n      testId: testId\r\n    }\r\n  });\r\n}\r\nexport function challengeStart(id: string) {\r\n  return axios.post<ICommonResp<boolean>>(`/api/rpachallenge/challengestart?testId=${id}`, {\r\n    testId: id\r\n  });\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport { Layout, Menu, Dropdown, Button, Space, message } from 'antd';\r\nimport { getUserInfo, login, logout } from '../service';\r\nconst { Header } = Layout;\r\nexport default class Bar extends PureComponent<{ title: string }> {\r\n  state = {\r\n    userName: '未登录',\r\n    isLogin: false\r\n  };\r\n  componentDidMount() {\r\n    getUserInfo().then((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          isLogin: true,\r\n          userName: user?.profile.name ?? '--'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          isLogin: false\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Header className=\"header\" title=\"RPA Challenge\">\r\n        <div>\r\n          <strong>RPA Challenge</strong>\r\n        </div>\r\n        <div className=\"mid-title\">{this.props?.title}</div>\r\n        <div className=\"user-info\">\r\n          {this.state.isLogin ? (\r\n            <Dropdown\r\n              overlay={\r\n                <Menu>\r\n                  <Menu.Item>\r\n                    {\r\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={logout}>\r\n                        注销\r\n                      </a>\r\n                    }\r\n                  </Menu.Item>\r\n                </Menu>\r\n              }\r\n              placement=\"bottomLeft\"\r\n            >\r\n              <a style={{ color: '#eee' }}>{this.state.userName}</a>\r\n            </Dropdown>\r\n          ) : (\r\n            <Button type=\"ghost\" onClick={login}>\r\n              点击登录\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button, message } from 'antd';\r\nimport Bar from '../components/Bar';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { clearLoginInfo, login } from '../service';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\nexport default function Login() {\r\n  useEffect(()=>{\r\n    clearLoginInfo()\r\n  },[\"\"])\r\n  return (\r\n    <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n      <Bar title=\"\" />\r\n      <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center',backgroundColor:\"#000\" }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', width: '100%', position: 'relative' }} className=\"bg\">\r\n          <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column' }}>\r\n            <div className=\"logo-login\" style={{ width: '300px', height: '100px' }}></div>\r\n            <Button\r\n              type=\"ghost\"\r\n              size=\"large\"\r\n              icon={<LoginOutlined />}\r\n              onClick={() => {\r\n                login().catch((err) => message.error(err.message));\r\n              }}\r\n            >\r\n              点击登录\r\n            </Button>\r\n          </section>\r\n        </div>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n}\r\n","import Layout, { Content } from 'antd/lib/layout/layout';\r\nimport React from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Button, message, Space, Table, Tag } from 'antd';\r\nimport { getUserExamList } from '../service';\r\n\r\ninterface ITopicModle {\r\n  /** 测试id */\r\n  Id: string;\r\n  /** 测试题目 */\r\n  Title: string;\r\n  /** 测试所在url */\r\n  URL: string;\r\n  /** 是否已通过测试 */\r\n  IsPassed: boolean;\r\n  /** 最佳用时 */\r\n  TimeCost?: number;\r\n  /** 耗时排名 */\r\n  Rank?: number;\r\n}\r\nexport class MainPage extends React.PureComponent {\r\n  state: {\r\n    topics: Array<ITopicModle>;\r\n    isBusy:boolean\r\n  } = {\r\n    topics: [],\r\n    isBusy: true\r\n  };\r\n  componentDidMount(){\r\n    getUserExamList().then(resp=>this.setState({\r\n      topics: resp.data?.response?.data??[],\r\n      isBusy: false\r\n    })).catch((err:any)=>{\r\n      message.error(`获取列表失败，请稍后刷新重试! (${err.message})`);\r\n    })\r\n  }\r\n  renderList() {\r\n    const columns = [\r\n      {\r\n        title: ' ',\r\n        width: '4%',\r\n        render: (obj: ITopicModle, record: ITopicModle, idx: number) => <span>{idx + 1}</span>\r\n      },\r\n      {\r\n        title: '题目名称',\r\n        dataIndex: 'Title',\r\n        key: 'Title',\r\n        render: (text: string) => <span>{text}</span>\r\n      },\r\n      {\r\n        title: '是否已通过',\r\n        dataIndex: 'IsPassed',\r\n        key: 'IsPassed',\r\n        render: (passed: boolean) => (passed ? <Tag color=\"green\">已通过</Tag> : <Tag color=\"red\">未通过</Tag>)\r\n      },\r\n      {\r\n        title: '耗时',\r\n        dataIndex: 'TimeCost',\r\n        key: 'TimeCost',\r\n        render: (timeCost: number, recoder: ITopicModle) => (recoder.IsPassed  ? <span>{(recoder.TimeCost??0) / 1000}s</span> : '--')\r\n      },\r\n      {\r\n        title: '排名',\r\n        dataIndex: 'Rank',\r\n        key: 'Rank',\r\n        render: (rank: number, recoder: ITopicModle) => (recoder.IsPassed ? <span>{rank}</span> : '--')\r\n      },\r\n      {\r\n        title: '',\r\n        dataIndex: 'Id',\r\n        key: 'Id',\r\n        render: (id: string) => (\r\n          <Space size=\"middle\">\r\n            <Button type=\"primary\" onClick={()=>{\r\n              window.location.href=`/main/topicdetail/${id}`;\r\n            }}>\r\n              <span >进入测试</span>\r\n            </Button>\r\n          </Space>\r\n        )\r\n      }\r\n    ];\r\n    return <Table style={{ width: '80%' }} columns={columns} dataSource={this.state.topics} loading={this.state.isBusy}/>;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title=\"题目列表\" />\r\n        <Content style={{ display: 'flex', justifyContent: 'center' }}>{this.renderList()}</Content>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import { Button, Divider, Layout, PageHeader, Modal, message } from 'antd';\r\nimport React, { PureComponent } from 'react';\r\nimport Bar from '../components/Bar';\r\nimport { Content, Footer } from 'antd/lib/layout/layout';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { challengeStart, getDetail, submit } from '../service';\r\nimport { Spin } from 'antd';\r\n\r\ninterface IProps {\r\n  match: {\r\n    params: { id: string };\r\n  };\r\n}\r\ninterface IState {\r\n  isTestBegin: boolean;\r\n  showDetail: boolean;\r\n  topicDetail: ITopicDetail;\r\n  isBusy: boolean;\r\n}\r\ninterface ITopicDetail {\r\n  /** 测试ID */\r\n  Id?: string;\r\n  /** 测试名称 */\r\n  Title?: string;\r\n  /** 测试说明 */\r\n  IntroductionHTMLStr?: string;\r\n  /** 测试页面URL */\r\n  URL?: string;\r\n  Name?: string;\r\n}\r\nexport class TopicInfo extends PureComponent<Partial<IProps>> {\r\n  state: IState = {\r\n    isTestBegin: false,\r\n    showDetail: true,\r\n    topicDetail: {},\r\n    isBusy: true\r\n  };\r\n\r\n  frameRef = React.createRef<HTMLIFrameElement>();\r\n  componentDidMount() {\r\n    const id = this.props?.match?.params?.id;\r\n    if (id === '' || id === undefined) {\r\n      message.error('无法读取当前考试信息ID，请退出后重试!');\r\n      return;\r\n    }\r\n    this.setState({ id });\r\n    getDetail(id)\r\n      .then((resp) => {\r\n        let topicDetail = resp.data.response;\r\n        let name = topicDetail.URL.split('/')[1];\r\n        this.setState({\r\n          topicDetail: {\r\n            ...topicDetail,\r\n            Name: name\r\n          },\r\n          isBusy: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`读取当前测试信息错误，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onBeginTestBtn() {\r\n    challengeStart(this.state.topicDetail.Id ?? '')\r\n      .then(() => {\r\n        this.setState({\r\n          isTestBegin: true,\r\n          showDetail: false\r\n        });\r\n      })\r\n      .catch((err: any) => {\r\n        message.error(`无法启动测试，请退出后重试！(${err.message})`);\r\n      });\r\n  }\r\n  onSwitchViewBtn() {\r\n    this.setState({\r\n      showDetail: !this.state.showDetail\r\n    });\r\n  }\r\n  onSubmitBtn() {\r\n    Modal.confirm({\r\n      title: '请确认',\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: '确认提交本次测试结果?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        try {\r\n          let frameWin: any = this.frameRef.current?.contentWindow;\r\n          frameWin\r\n            .getExamResult()\r\n            .then((data: any) => {\r\n              console && console.log(data);\r\n              submit({\r\n                data: data,\r\n                appName: this.state.topicDetail.Name || '',\r\n                testId: this.state.topicDetail.Id ?? ''\r\n              })\r\n                .then((res) => {\r\n                  res.data.isPassed\r\n                    ? Modal.success({\r\n                        title: '通过测试',\r\n                        content: (\r\n                          <div>\r\n                            <div>\r\n                              用时：<span style={{ fontWeight: 'bold' }}>{res.data.timeout ?? '--'}</span> ms\r\n                            </div>\r\n                          </div>\r\n                        ),\r\n                        onOk() {\r\n                          (window.location as any).href = '/main/index.html';\r\n                        }\r\n                      })\r\n                    : message.error(res.data.result ?? '未通过校验，请检查修改后重新提交！');\r\n                })\r\n                .catch((err) => {\r\n                  console && console.error(err);\r\n                  message.error(err.message);\r\n                });\r\n            })\r\n            .catch((err: string) => {\r\n              console && console.error(err);\r\n              message.error(err);\r\n            });\r\n        } catch (ex) {\r\n          console && console.error(JSON.stringify(ex.message));\r\n          message.error(JSON.stringify(ex.message));\r\n        }\r\n      }\r\n    });\r\n  }\r\n  renderTestPage() {\r\n    return (\r\n      <>\r\n        <Content style={{ position: 'relative' }}>\r\n          <iframe src={this.state.topicDetail.URL} height=\"100%\" width=\"100%\" ref={this.frameRef}></iframe>\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              left: 0,\r\n              right: 0,\r\n              top: 0,\r\n              bottom: 0,\r\n              visibility: !this.state.showDetail ? 'hidden' : 'initial',\r\n              background: '#fff'\r\n            }}\r\n          >\r\n            <PageHeader title={this.state.topicDetail?.Title + (this.state.topicDetail.Id ?? '')} />\r\n            <Divider style={{ margin: '0 0 10px 0' }} />\r\n            <div\r\n              style={{ padding: '0 10px 20px 10px' }}\r\n              dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n            ></div>\r\n          </div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderDetailPage() {\r\n    return (\r\n      <>\r\n        <Content>\r\n          <PageHeader title={this.state.topicDetail?.Title} />\r\n          <Divider style={{ margin: '0 0 10px 0' }} />\r\n          <div\r\n            style={{ padding: '0 10px 20px 10px' }}\r\n            dangerouslySetInnerHTML={{ __html: this.state.topicDetail.IntroductionHTMLStr || '' }}\r\n          ></div>\r\n        </Content>\r\n      </>\r\n    );\r\n  }\r\n  renderFooder() {\r\n    return this.state.isTestBegin ? (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" danger onClick={this.onSubmitBtn.bind(this)}>\r\n          提交\r\n        </Button>\r\n        <Button style={{ float: 'right', marginLeft: 10, marginRight: 10 }} type=\"primary\" onClick={this.onSwitchViewBtn.bind(this)}>\r\n          切换视图\r\n        </Button>\r\n      </Footer>\r\n    ) : (\r\n      <Footer style={{ padding: '8px 50px 5px 50px' }}>\r\n        <Button style={{ float: 'right' }} type=\"primary\" onClick={this.onBeginTestBtn.bind(this)}>\r\n          开始测试\r\n        </Button>\r\n      </Footer>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ height: '100%', width: '100%', background: 'rgb(255,255,255)' }}>\r\n        <Bar title={this.state.isTestBegin && !this.state.showDetail ? this.state.topicDetail.Title ?? '' : '详情'} />\r\n        {this.state.isBusy && <Spin tip=\"加载中...\" />}\r\n        {this.state.isTestBegin ? this.renderTestPage() : this.renderDetailPage()}\r\n        {this.renderFooder()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { message, Spin } from 'antd';\r\nimport Bar from '../components/Bar';\r\nimport Layout, { Content } from 'antd/lib/layout/layout';\r\nimport { loginCb } from '../service';\r\n\r\nexport default function LoginSuccess() {\r\n  useEffect(() => {\r\n    loginCb()\r\n      .then((user) => {\r\n        window.location.href = '/main/index.html';\r\n      })\r\n      .catch((err) => message.error(err.message));\r\n  });\r\n  return (\r\n    <Layout style={{ height: '100%', background: 'rgb(255,255,255)' }}>\r\n      <Spin tip=\"正在登录...\" style={{ height: '100vh'}}>\r\n        <Bar title=\"\" />\r\n        <Content style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height:\"95vh\" }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%', position: 'relative' }} className=\"bg\">\r\n            <section style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n              <div className=\"logo-login\" style={{ width: '400px', height: '150px', marginRight: 10 }}></div>\r\n            </section>\r\n          </div>\r\n        </Content>\r\n      </Spin>\r\n    </Layout>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\nimport './App.less';\nimport { Router, Route } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport Login from './pages/Login';\nimport { MainPage } from './pages/Main';\nimport { TopicInfo } from './pages/TopicDetail';\nimport LoginSuccess from './pages/LoginSuccess';\nconst history = createBrowserHistory();\nclass App extends React.Component<{}, { title: string }> {\n  setTitle(title: string) {\n    this.setState({\n      title: title\n    });\n  }\n  render() {\n    return (\n      <Router history={history}>\n         <Route path=\"/main\" exact component={MainPage} />\n        <Route path=\"/main/index.html\" exact component={MainPage} />\n        <Route path=\"/main/login\" component={Login} />\n        <Route path=\"/main/login_success\"  component={LoginSuccess} />\n        <Route path=\"/main/topicdetail/:id\" component={TopicInfo} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { doAuthCheck } from './service';\ndoAuthCheck(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}